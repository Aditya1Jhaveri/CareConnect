[{"D:\\CareConnect\\src\\index.js":"1","D:\\CareConnect\\src\\App.js":"2","D:\\CareConnect\\src\\reportWebVitals.js":"3","D:\\CareConnect\\src\\components\\Patient\\PatientDashboard.js":"4","D:\\CareConnect\\src\\components\\Overview page\\OverviewPage.js":"5","D:\\CareConnect\\src\\components\\Doctor\\DoctorDashboard.js":"6","D:\\CareConnect\\src\\components\\Patient\\PProfile.js":"7","D:\\CareConnect\\src\\components\\Overview page\\Contact.js":"8","D:\\CareConnect\\src\\components\\Overview page\\About.js":"9","D:\\CareConnect\\src\\components\\Overview page\\NavBar.js":"10","D:\\CareConnect\\src\\components\\Overview page\\Home.js":"11","D:\\CareConnect\\src\\components\\Login Form\\DoctorLogin.js":"12","D:\\CareConnect\\src\\components\\Login Form\\PatientLogin.js":"13","D:\\CareConnect\\src\\components\\Login Form\\AdminLogin.js":"14","D:\\CareConnect\\src\\components\\Doctor\\Doctor Form\\DoctorForm.js":"15","D:\\CareConnect\\src\\components\\Doctor\\User.js":"16","D:\\CareConnect\\src\\components\\Doctor\\Doctor Sidebar\\DoctorSidebar.js":"17","D:\\CareConnect\\src\\components\\Patient\\Patient Form\\Signup.js":"18","D:\\CareConnect\\src\\components\\Overview page\\Footer\\Footer.js":"19","D:\\CareConnect\\src\\components\\Doctor\\Doctor Sidebar\\Profile.js":"20","D:\\CareConnect\\src\\components\\Doctor\\Clickout.js":"21","D:\\CareConnect\\src\\components\\Doctor\\Doctor Form\\LinearStepper.js":"22","D:\\CareConnect\\src\\api\\api.js":"23"},{"size":653,"mtime":1678436861426,"results":"24","hashOfConfig":"25"},{"size":599,"mtime":1678436861080,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1678436861429,"results":"27","hashOfConfig":"25"},{"size":7342,"mtime":1678436861233,"results":"28","hashOfConfig":"25"},{"size":1100,"mtime":1678436861225,"results":"29","hashOfConfig":"25"},{"size":5672,"mtime":1678436861162,"results":"30","hashOfConfig":"25"},{"size":1768,"mtime":1678436861227,"results":"31","hashOfConfig":"25"},{"size":160,"mtime":1678436861184,"results":"32","hashOfConfig":"25"},{"size":127,"mtime":1678436861182,"results":"33","hashOfConfig":"25"},{"size":2918,"mtime":1678436861224,"results":"34","hashOfConfig":"25"},{"size":8642,"mtime":1678436861211,"results":"35","hashOfConfig":"25"},{"size":10360,"mtime":1678528178220,"results":"36","hashOfConfig":"25"},{"size":6765,"mtime":1678436861177,"results":"37","hashOfConfig":"25"},{"size":8370,"mtime":1678436861175,"results":"38","hashOfConfig":"25"},{"size":407,"mtime":1678436861095,"results":"39","hashOfConfig":"25"},{"size":3524,"mtime":1678436861164,"results":"40","hashOfConfig":"25"},{"size":2539,"mtime":1678436861151,"results":"41","hashOfConfig":"25"},{"size":8199,"mtime":1678536978228,"results":"42","hashOfConfig":"25"},{"size":2577,"mtime":1678436861196,"results":"43","hashOfConfig":"25"},{"size":1768,"mtime":1678436861155,"results":"44","hashOfConfig":"25"},{"size":645,"mtime":1678436861086,"results":"45","hashOfConfig":"25"},{"size":11121,"mtime":1678436861124,"results":"46","hashOfConfig":"25"},{"size":67,"mtime":1678516562138,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"uwrc7y",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\CareConnect\\src\\index.js",[],["100","101"],"D:\\CareConnect\\src\\App.js",[],"D:\\CareConnect\\src\\reportWebVitals.js",[],"D:\\CareConnect\\src\\components\\Patient\\PatientDashboard.js",[],"D:\\CareConnect\\src\\components\\Overview page\\OverviewPage.js",[],"D:\\CareConnect\\src\\components\\Doctor\\DoctorDashboard.js",["102","103","104"],"import React from 'react'\r\nimport './Dashboard.css'\r\n// import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { TableContainer, Paper, Select, MenuItem } from '@material-ui/core'\r\n\r\nimport { User } from './User'\r\n\r\nimport { Table } from 'react-bootstrap'\r\nimport DoctorSidebar from './Doctor Sidebar/DoctorSidebar'\r\n\r\nconst DoctorDashboard = () => {\r\n  // const [appointment, setAppointment] = useState([])\r\n  const [action1, setAction1] = useState(null)\r\n  const [key, setKey] = useState(null)\r\n\r\n  // const pendingAppointment = appointment.filter(\r\n  //   (pa) => pa.action1 === 'pending',\r\n  // )\r\n  // const todaysDate = new Date()\r\n  // const day = todaysDate.getDate()\r\n  // const month = todaysDate.getMonth()\r\n  // const year = todaysDate.getFullYear()\r\n  // const fullTodaysDate = month + 1 + '/' + day + '/' + year\r\n  // const selectedDateAppointment = appointment.filter(\r\n  //   (appointment) => appointment.details.date === fullTodaysDate,\r\n  // )\r\n\r\n  // const handleChange = (event) => {\r\n  //     let action1 = event.target.value;\r\n  //     const actions = { action1: action1, key };\r\n  //     fetch(\"https://guarded-anchorage-08361.herokuapp.com/modifyAction1ByKey\", {\r\n  //         method: \"post\",\r\n  //         headers: {\r\n  //             \"Content-type\": \"application/json\"\r\n  //         },\r\n  //         body: JSON.stringify(actions)\r\n  //     })\r\n  //         .then(response => response.json())\r\n  //         .then(data => {\r\n  //             setAction1(data)\r\n  //             console.log(data);\r\n  //         })\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //     fetch(\"https://guarded-anchorage-08361.herokuapp.com/appointment\")\r\n  //         .then(res => res.json())\r\n  //         .then(data => {\r\n  //             const fetchedData = data.reverse()\r\n  //             setAppointment(fetchedData);\r\n  //         });\r\n  // }, [action1]);\r\n\r\n  return (\r\n    <div>\r\n      <DoctorSidebar />\r\n      <div className=\"dashboard\">\r\n        <div className=\"dashboardTable\">\r\n          <div className=\"dashboardHeading\">\r\n            <div style={{ backgroundColor: 'tomato' }}>\r\n              {/* <h1>{pendingAppointment.length}</h1> */}\r\n              <p>\r\n                Pending\r\n                <br />\r\n                Appointments\r\n              </p>\r\n            </div>\r\n            <div style={{ backgroundColor: 'deepskyblue' }}>\r\n              {/* <h1>{selectedDateAppointment.length}</h1> */}\r\n              <p>\r\n                Today's\r\n                <br />\r\n                Appointments\r\n              </p>\r\n            </div>\r\n            <div style={{ backgroundColor: 'mediumseagreen' }}>\r\n              <h1>{User.length}</h1>\r\n              <p>\r\n                Total\r\n                <br />\r\n                Appointments\r\n              </p>\r\n            </div>\r\n            <div style={{ backgroundColor: 'orange' }}>\r\n              <h1>{User.length}</h1>\r\n              <p>\r\n                Total\r\n                <br />\r\n                Patients\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboardTableDetails\">\r\n            <div className=\"table-responsive\">\r\n              <p>Recent Appointments</p>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <td align=\"left\">Sr. No</td>\r\n                      <td align=\"center\">Date</td>\r\n                      <td align=\"center\">Time</td>\r\n                      <td align=\"left\">Name</td>\r\n                      <td align=\"center\">Contact</td>\r\n                      <td align=\"center\">Prescription</td>\r\n                      <td align=\"center\">Action</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {User.map((appoint) => (\r\n                      <tr key={appoint._id}>\r\n                        <td align=\"left\" data-th=\"Sr. No\">\r\n                          {User.indexOf(appoint) + 1}\r\n                        </td>\r\n                        <td align=\"center\" data-th=\"Date\">\r\n                          {appoint.date}\r\n                        </td>\r\n                        <td align=\"center\" data-th=\"Time\">\r\n                          {appoint.time}\r\n                        </td>\r\n                        <td align=\"left\" data-th=\"Name\">\r\n                          {appoint.name}\r\n                        </td>\r\n                        <td align=\"center\" data-th=\"Contact\">\r\n                          {appoint.phoneNumber}\r\n                        </td>\r\n                        <td align=\"center\" data-th=\"Prescription\">\r\n                          Not Added\r\n                        </td>\r\n                        <td\r\n                          data-th=\"Action\"\r\n                          onMouseOver={() => setKey(appoint.key)}\r\n                          align=\"center\"\r\n                        >\r\n                          <Select\r\n                            style={{ color: 'white' }}\r\n                            className=\"actionSelect\"\r\n                            value={appoint.action1}\r\n                            // onChange={handleChange}\r\n                          >\r\n                            <MenuItem value={'pending'}>Pending</MenuItem>\r\n                            <MenuItem value={'approved'}>Approved</MenuItem>\r\n                          </Select>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoctorDashboard\r\n","D:\\CareConnect\\src\\components\\Patient\\PProfile.js",[],"D:\\CareConnect\\src\\components\\Overview page\\Contact.js",[],"D:\\CareConnect\\src\\components\\Overview page\\About.js",[],"D:\\CareConnect\\src\\components\\Overview page\\NavBar.js",[],"D:\\CareConnect\\src\\components\\Overview page\\Home.js",[],"D:\\CareConnect\\src\\components\\Login Form\\DoctorLogin.js",["105","106"],"import { useNavigate } from \"react-router-dom\";\r\nimport { Hidden, IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./dLog.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DoctorIcon from \"../../images/DoctorIcon.png\";\r\nimport PatientIcon from \"../../images/PatientIcon.png\";\r\nimport AdminIcon from \"../../images/AdminIcon.jpeg\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport base_url from \"../../api/api\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nexport const DoctorLogin = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const patLogin = () => {\r\n    navigate(\"/PatientLogin\");\r\n  };\r\n  const adLogin = () => {\r\n    navigate(\"/AdminLogin\");\r\n  };\r\n\r\n  // const login = () => {\r\n  //   navigate(\"/DoctorDashboard\");\r\n  // };\r\n\r\n  let [authMode, setAuthMode] = useState(\"signin\");\r\n  const changeAuthMode = () => {\r\n    setAuthMode(authMode === \"signin\" ? \"signup\" : \"signin\");\r\n    navigate(\"/DoctorForm\");\r\n  };\r\n\r\n  // const [valueUser, setusername] = useState(\"\");\r\n  // const [valuePassword, setPassword] = useState(\"\");\r\n\r\n  // const [errors, setErrors] = useState({});\r\n\r\n  // async function login() {\r\n  //   let result = await fetch(\r\n  //     'https://driverportalapi.adsdev.uk/1/Authentication',\r\n  //     {\r\n  //       method: \"Post\",\r\n  //       mode: \"cors\",\r\n  //       body: JSON.stringify({ valueUser, valuePassword }),\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Accept: \"application/json\",\r\n  //       },\r\n  //     }\r\n  //   );\r\n  //   result = await result.json();\r\n  //   console.log(result);\r\n  //   if (result.response) {\r\n  //     localStorage.setItem(\"result\", JSON.stringify(result));\r\n\r\n  //     navigate(\"/DoctorDashboard\");\r\n  //   }\r\n  // }\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (validate()) window.alert(\"Ok done\");\r\n  // };\r\n\r\n  // const [user, setUser] = useState({});\r\n  // const [pass, setPass] = useState({});\r\n\r\n  // const {\r\n  //   register,\r\n  //   handleSubmit,\r\n  //   formState: { errors },\r\n  // } = useForm();\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  //   navigate(\"/DoctorDashboard\");\r\n  //   // console.log(errors);\r\n  // };\r\n\r\n  const [eye, setEye] = useState();\r\n\r\n  const handleEye = () => {\r\n    setEye(!eye);\r\n  };\r\n\r\n  const validation = Yup.object().shape({\r\n    email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\r\n\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validation),\r\n  });\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(JSON.stringify(data, null, 2));\r\n  //   navigate(\"/DoctorDashboard\");\r\n  // };\r\n\r\n  const [Username, setUsername] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [Role, setRole] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user-info\")) {\r\n      // navigate(\"/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  async function login() {\r\n    let result = await fetch(\"http://localhost:9595/api/v1/auth\", {\r\n      method: \"Get\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        role: Role,\r\n        username: Username,\r\n        password: Password,\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    result = await result.json();\r\n    console.log(result);\r\n    if (result) {\r\n      localStorage.setItem(\"result\", JSON.stringify(result));\r\n\r\n      navigate(\"/DoctorForm\");\r\n    }\r\n  }\r\n\r\n  const handleForm = (e) => {\r\n    // postdata(Role,Username,Password);\r\n    e.preventDefault();\r\n    console.log(Username, Password, Role);\r\n  };\r\n\r\n  // const postdata=(Role,Username,Password)=>{\r\n  //   axios.get(`${base_url}/api/v1/auth`,{\r\n  //     headers: {\r\n  //       'role': Role,\r\n  //       'username':Username,\r\n  //       'password':Password,\r\n  //  } }).then(\r\n  //     (response)=>{\r\n  //       console.log(response);\r\n  //       navigate(\"/src/components/Doctor/Doctor Form/LinearStepper.js\")\r\n  //       console.log(\"Success\");\r\n  //     },\r\n  //     (error)=>{\r\n  //       console.log(error);\r\n  //     }\r\n\r\n  //     )\r\n  // }\r\n\r\n  if (authMode === \"signin\") {\r\n    return (\r\n      <div className=\"Auth-form-container\">\r\n        <form className=\"Auth-form\" onSubmit={handleSubmit(handleForm)}>\r\n          <div className=\"Auth-form-content\">\r\n            <div className=\"container\">\r\n              <div className=\"inner-container\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light btn-circle btn-xl\"\r\n                >\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={DoctorIcon}\r\n                    style={{\r\n                      width: 70,\r\n                      height: 70,\r\n                      border: \"2px solid  black\",\r\n                      // boxShadow: '2px 2px 20px grey',\r\n                    }}\r\n                  />\r\n                  <p\r\n                    value={\"ROLE_DOC\"}\r\n                    style={{\r\n                      marginTop: 8,\r\n                      marginLeft: 2,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    DOCTOR\r\n                  </p>\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light btn-circle btn-xl\"\r\n                  onClick={patLogin}\r\n                >\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={PatientIcon}\r\n                    style={{\r\n                      width: 70,\r\n                      height: 70,\r\n                      border: \"2px solid  black\",\r\n                      // boxShadow: '2px 2px 20px grey',\r\n                    }}\r\n                  />\r\n                  <p\r\n                    style={{\r\n                      marginTop: 8,\r\n                      marginLeft: 2,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    PATIENT\r\n                  </p>\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light btn-circle btn-xl\"\r\n                  onClick={adLogin}\r\n                >\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={AdminIcon}\r\n                    style={{\r\n                      width: 70,\r\n                      height: 70,\r\n                      border: \"2px solid  black\",\r\n                      // boxShadow: '2px 2px 20px grey',\r\n                    }}\r\n                  />\r\n                  <p\r\n                    style={{\r\n                      marginTop: 8,\r\n                      marginLeft: 2,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    ADMIN\r\n                  </p>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <h3 className=\"Auth-form-title\">Doctor Sign In</h3>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"email\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Enter Email Id\"\r\n                variant=\"standard\"\r\n                label=\"Email\"\r\n                onChange={(event) => {\r\n                  setUsername(event.target.value);\r\n                }}\r\n                {...register(\"email\")}\r\n                error={errors.email ? \"is-invalid\" : \"\"}\r\n                helperText={errors.email?.message}\r\n              />\r\n              {/* <div className=\"invalid-feedback\">{errors.userName?.message}</div> */}\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <input\r\n                type={Hidden}\r\n                value={\"ROLE_DOC\"}\r\n                disabled\r\n                onChange={(event) => {\r\n                  setRole(event.target.value);\r\n                }}\r\n              ></input>\r\n              <TextField\r\n                type={eye ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                variant=\"standard\"\r\n                label=\"Password\"\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n                autoComplete=\"current-password\"\r\n                {...register(\"password\")}\r\n                className={`form-control mt-1 ${\r\n                  errors.password ? \"is-invalid\" : \"\"\r\n                }`}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleEye}>\r\n                        {eye ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n\r\n            <div className=\"forpassword\">\r\n              <span className=\"link-danger\" onClick={changeAuthMode}>\r\n                Forgot password?\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"d-grid gap-2 mt-3\">\r\n              <button type=\"submit\" className=\"btn btn-primary\" onClick={login}>\r\n                Submit\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              Not registered yet?{\" \"}\r\n              <span className=\"link-primary\" onClick={changeAuthMode}>\r\n                Sign Up\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default DoctorLogin;\r\n","D:\\CareConnect\\src\\components\\Login Form\\PatientLogin.js",[],"D:\\CareConnect\\src\\components\\Login Form\\AdminLogin.js",["107"],"import { useNavigate } from \"react-router-dom\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./dLog.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DoctorIcon from \"../../images/DoctorIcon.png\";\r\nimport PatientIcon from \"../../images/PatientIcon.png\";\r\nimport AdminIcon from \"../../images/AdminIcon.jpeg\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport const AdminLogin = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const patLogin = () => {\r\n    navigate(\"/PatientLogin\");\r\n  };\r\n  const docLogin = () => {\r\n    navigate(\"/DoctorLogin\");\r\n  };\r\n\r\n  // const login = () => {\r\n  //   navigate(\"/DoctorDashboard\");\r\n  // };\r\n\r\n  let [authMode, setAuthMode] = useState(\"signin\");\r\n  const changeAuthMode = () => {\r\n    setAuthMode(authMode === \"signin\" ? \"signup\" : \"signin\");\r\n    navigate(\"/DoctorForm\");\r\n  };\r\n\r\n  // const [valueUser, setusername] = useState(\"\");\r\n  // const [valuePassword, setPassword] = useState(\"\");\r\n\r\n  // const [errors, setErrors] = useState({});\r\n\r\n  // async function login() {\r\n  //   let result = await fetch(\r\n  //     'https://driverportalapi.adsdev.uk/1/Authentication',\r\n  //     {\r\n  //       method: \"Post\",\r\n  //       mode: \"cors\",\r\n  //       body: JSON.stringify({ valueUser, valuePassword }),\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Accept: \"application/json\",\r\n  //       },\r\n  //     }\r\n  //   );\r\n  //   result = await result.json();\r\n  //   console.log(result);\r\n  //   if (result.response) {\r\n  //     localStorage.setItem(\"result\", JSON.stringify(result));\r\n\r\n  //     navigate(\"/DoctorDashboard\");\r\n  //   }\r\n  // }\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (validate()) window.alert(\"Ok done\");\r\n  // };\r\n\r\n  // const [user, setUser] = useState({});\r\n  // const [pass, setPass] = useState({});\r\n\r\n  // const {\r\n  //   register,\r\n  //   handleSubmit,\r\n  //   formState: { errors },\r\n  // } = useForm();\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  //   navigate(\"/DoctorDashboard\");\r\n  //   // console.log(errors);\r\n  // };\r\n\r\n  const [eye, setEye] = useState();\r\n\r\n  const handleEye = () => {\r\n    setEye(!eye);\r\n  };\r\n\r\n  const validation = Yup.object().shape({\r\n    userName: Yup.string()\r\n      .required(\"Username is required\")\r\n      .min(6, \"Username must be at least 6 characters\"),\r\n\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(6, \"Password must be at least 6 characters\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validation),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    navigate(\"/DoctorDashboard\");\r\n  };\r\n\r\n  if (authMode === \"signin\") {\r\n    return (\r\n      <div className=\"Auth-form-container\">\r\n        <form className=\"Auth-form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"Auth-form-content\">\r\n            <div className=\"container\">\r\n              <div className=\"inner-container\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light btn-circle btn-xl\"\r\n                  onClick={docLogin}\r\n                >\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={DoctorIcon}\r\n                    style={{\r\n                      width: 70,\r\n                      height: 70,\r\n                      border: \"2px solid  black\",\r\n                      // boxShadow: '2px 2px 20px grey',\r\n                    }}\r\n                  />\r\n                  <p\r\n                    style={{\r\n                      marginTop: 8,\r\n                      marginLeft: 2,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    DOCTOR\r\n                  </p>\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light btn-circle btn-xl\"\r\n                  onClick={patLogin}\r\n                >\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={PatientIcon}\r\n                    style={{\r\n                      width: 70,\r\n                      height: 70,\r\n                      border: \"2px solid  black\",\r\n                      // boxShadow: '2px 2px 20px grey',\r\n                    }}\r\n                  />\r\n                  <p\r\n                    style={{\r\n                      marginTop: 8,\r\n                      marginLeft: 2,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    PATIENT\r\n                  </p>\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light btn-circle btn-xl\"\r\n                >\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src={AdminIcon}\r\n                    style={{\r\n                      width: 70,\r\n                      height: 70,\r\n                      border: \"2px solid  black\",\r\n                      // boxShadow: '2px 2px 20px grey',\r\n                    }}\r\n                  />\r\n                  <p\r\n                    style={{\r\n                      marginTop: 8,\r\n                      marginLeft: 2,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    ADMIN\r\n                  </p>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <h3 className=\"Auth-form-title\">Admin Sign In</h3>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"userName\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Enter Username\"\r\n                variant=\"standard\"\r\n                label=\"UserName\"\r\n                {...register(\"userName\")}\r\n                error={errors.userName ? \"is-invalid\" : \"\"}\r\n                helperText={errors.userName?.message}\r\n              />\r\n              {/* <div className=\"invalid-feedback\">{errors.userName?.message}</div> */}\r\n            </div>\r\n\r\n            <div className=\"form-group mt-3\">\r\n              <TextField\r\n                type={eye ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                variant=\"standard\"\r\n                label=\"Password\"\r\n                autoComplete=\"current-password\"\r\n                {...register(\"password\")}\r\n                className={`form-control mt-1 ${\r\n                  errors.password ? \"is-invalid\" : \"\"\r\n                }`}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleEye}>\r\n                        {eye ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n\r\n            {/* <div className=\"forpassword\">\r\n              <span className=\"link-danger\" onClick={changeAuthMode}>\r\n                Forgot password?\r\n              </span>\r\n            </div> */}\r\n\r\n            <div className=\"d-grid gap-2 mt-3\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n\r\n            {/* <div className=\"text-center\">\r\n              Not registered yet?{\" \"}\r\n              <span className=\"link-primary\" onClick={changeAuthMode}>\r\n                Sign Up\r\n              </span>\r\n            </div> */}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default AdminLogin;\r\n","D:\\CareConnect\\src\\components\\Doctor\\Doctor Form\\DoctorForm.js",[],"D:\\CareConnect\\src\\components\\Doctor\\User.js",[],"D:\\CareConnect\\src\\components\\Doctor\\Doctor Sidebar\\DoctorSidebar.js",[],"D:\\CareConnect\\src\\components\\Patient\\Patient Form\\Signup.js",["108","109","110"],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./Signup.css\";\r\nimport axios from \"axios\";\r\nimport { FormControl, MenuItem, Select, InputLabel } from \"@mui/material\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport base_url from \"../../../api/api\";\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const phoneRegExp =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\n  const validation = Yup.object().shape({\r\n    Firstname: Yup.string().required(\"Firstname is required\"),\r\n    Middlename: Yup.string().required(\"Middlename is required\"),\r\n    Lastname: Yup.string().required(\"Lastname is required\"),\r\n    email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\r\n\r\n    // gender: Yup.string()\r\n    //   .oneOf([\"male\", \"female\"], \"Required\")\r\n    //   .required(\"Required\"),\r\n    // role: Yup.string().required(\"Role is required\"),\r\n\r\n    phonenumber: Yup.string()\r\n      .typeError(\"Enter valid Phone Number\")\r\n      .matches(phoneRegExp, \"Phone number is not valid\")\r\n      .required(\"Required\"),\r\n\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .max(40, \"Password must not exceed 40 characters\"),\r\n\r\n    confirmpassword: Yup.string()\r\n      .required(\"Confirm Password is required\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Confirm Password does not match\"),\r\n\r\n    acceptterms: Yup.bool().oneOf([true], \"Accept Terms is required\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validation),\r\n  });\r\n\r\n  const paperStyle = {\r\n    padding: \"30px 20px\",\r\n    width: 500,\r\n    innerHeight: 100,\r\n    outerHeight: 100,\r\n    margin: \"20px auto\",\r\n  };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const handleForm = () => {\r\n    console.log(user);\r\n    postdata(user);\r\n    // e.preventDefault();\r\n  };\r\n\r\n  const postdata = (user) => {\r\n    axios.post(`${base_url}/api/v1/user`, user).then(\r\n      (response) => {\r\n        console.log(response);\r\n        navigate(\"/PatientLogin\");\r\n        console.log(\"Success\");\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={10} style={paperStyle} width={200}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            {/* <AddCircleOutlineOutlinedIcon /> */}\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Sign Up</h2>\r\n          <Typography variant=\"caption\" gutterBottom>\r\n            Please fill this form to create an account !\r\n          </Typography>\r\n        </Grid>\r\n        <form onSubmit={handleForm}>\r\n          <TextField\r\n            id=\"firstname\"\r\n            type=\"text\"\r\n            name=\"Firstname\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Firstname\"\r\n            placeholder=\"Enter your Firstname\"\r\n            // {...register(\"Firstname\")}\r\n            // error={errors.Firstname ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.Firstname?.message}\r\n            onChange={(e) => {\r\n              setUser({ ...user, firstname: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"middlename\"\r\n            type=\"text\"\r\n            name=\"Middlename\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Middlename\"\r\n            placeholder=\"Enter your Middlename\"\r\n            // {...register(\"Middlename\")}\r\n            // error={errors.Middlename ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.Middlename?.message}\r\n            onChange={(e) => {\r\n              setUser({ ...user, middlename: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"lastname\"\r\n            type=\"text\"\r\n            name=\"Lastname\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Lastname\"\r\n            placeholder=\"Enter your Lastname\"\r\n            // {...register(\"Lastname\")}\r\n            // error={errors.Lastname ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.Lastname?.message}\r\n            onChange={(e) => {\r\n              setUser({ ...user, lastname: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Email\"\r\n            placeholder=\"Enter your email\"\r\n            // {...register(\"email\")}\r\n            // error={errors.email ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.email?.message}\r\n            onChange={(e) => {\r\n              setUser({ ...user, email: e.target.value });\r\n            }}\r\n          />\r\n          <FormControl variant=\"standard\" sx={{ minWidth: 460 }}>\r\n            <InputLabel id=\"demo-simple-select-standard-label\">Role</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-standard-label\"\r\n              id=\"role\"\r\n              value={FormData.role}\r\n              onChange={(e) => {\r\n                setUser({ ...user, role: e.target.value });\r\n              }}\r\n              label=\"Role\"\r\n              width={460}\r\n            >\r\n              <MenuItem value={\"ROLE_PAT\"}>Patient</MenuItem>\r\n              <MenuItem value={\"ROLE_DOC\"}>Doctor</MenuItem>\r\n              <MenuItem value={\"ROLE_ADM\"}>Admin</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            id=\"mobileNo\"\r\n            name=\"phonenumber\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Phone Number\"\r\n            placeholder=\"Enter your phone number\"\r\n            // {...register(\"phonenumber\")}\r\n            // error={errors.phonenumber ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.phonenumber?.message}\r\n            onChange={(e) => {\r\n              setUser({ ...user, mobileNo: e.target.value });\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Password\"\r\n            placeholder=\"Enter your password\"\r\n            // {...register(\"password\")}\r\n            // error={errors.password ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.password?.message}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"confirmpassword\"\r\n            className=\"form-control mt-1\"\r\n            variant=\"standard\"\r\n            label=\"Confirm Password\"\r\n            placeholder=\"Confirm your password\"\r\n            // {...register(\"confirmpassword\")}\r\n            // error={errors.confirmpassword ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.confirmpassword?.message}\r\n            onChange={(e) => {\r\n              setUser({ ...user, password: e.target.value });\r\n            }}\r\n          />\r\n          <FormControlLabel\r\n            name=\"acceptterms\"\r\n            type=\"checkbox\"\r\n            control={<Checkbox name=\"checkedA\" />}\r\n            label=\"I accept the terms and conditions.\"\r\n            // {...register(\"acceptterms\")}\r\n            // error={errors.acceptterms ? \"is-invalid\" : \"\"}\r\n            // helperText={errors.acceptterms?.message}\r\n          />\r\n          <br></br>\r\n          <Button id=\"signup\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Sign up\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\CareConnect\\src\\components\\Overview page\\Footer\\Footer.js",[],"D:\\CareConnect\\src\\components\\Doctor\\Doctor Sidebar\\Profile.js",[],"D:\\CareConnect\\src\\components\\Doctor\\Clickout.js",[],"D:\\CareConnect\\src\\components\\Doctor\\Doctor Form\\LinearStepper.js",[],["111","112"],"D:\\CareConnect\\src\\api\\api.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":14,"column":10,"nodeType":"119","messageId":"120","endLine":14,"endColumn":17},{"ruleId":"117","severity":1,"message":"121","line":14,"column":19,"nodeType":"119","messageId":"120","endLine":14,"endColumn":29},{"ruleId":"117","severity":1,"message":"122","line":15,"column":10,"nodeType":"119","messageId":"120","endLine":15,"endColumn":13},{"ruleId":"117","severity":1,"message":"123","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":16},{"ruleId":"117","severity":1,"message":"124","line":16,"column":8,"nodeType":"119","messageId":"120","endLine":16,"endColumn":13},{"ruleId":"117","severity":1,"message":"125","line":32,"column":9,"nodeType":"119","messageId":"120","endLine":32,"endColumn":23},{"ruleId":"117","severity":1,"message":"126","line":58,"column":5,"nodeType":"119","messageId":"120","endLine":58,"endColumn":13},{"ruleId":"117","severity":1,"message":"127","line":59,"column":5,"nodeType":"119","messageId":"120","endLine":59,"endColumn":17},{"ruleId":"117","severity":1,"message":"128","line":60,"column":18,"nodeType":"119","messageId":"120","endLine":60,"endColumn":24},{"ruleId":"113","replacedBy":"129"},{"ruleId":"115","replacedBy":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'action1' is assigned a value but never used.","Identifier","unusedVar","'setAction1' is assigned a value but never used.","'key' is assigned a value but never used.","'base_url' is defined but never used.","'axios' is defined but never used.","'changeAuthMode' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.",["131"],["132"],"no-global-assign","no-unsafe-negation"]